#SSO with KeyCloak
#keycloak.auth-server-url=http://localhost:8180/auth
#keycloak.realm=LearningRealm
#keycloak.resource=spring-app
#keycloak.public-client=false
#keycloak.principal-attribute=preferred_username
#keycloak.credentials.secret=tFaGavjRrSVlDQLGz5CxaTZ5rsMbPJ6h


#spring.security.oauth2.client.provider.external.issuer-uri=http://localhost:8180/auth
#spring.security.oauth2.client.provider.external.issuer-uri=http://localhost:8080/realms/external

#spring.security.oauth2.client.registration.external.provider=external
#spring.security.oauth2.client.registration.external.client-name=spring-app
#spring.security.oauth2.client.registration.external.client-id=spring-app
#spring.security.oauth2.client.registration.external.client-secret=tFaGavjRrSVlDQLGz5CxaTZ5rsMbPJ6h
#spring.security.oauth2.client.registration.external.scope=openid,offline_access,profile
#spring.security.oauth2.client.registration.external.authorization-grant-type=authorization_code

spring.security.oauth2.client.registration.keycloak.client-id=spring-app
spring.security.oauth2.client.registration.keycloak.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.keycloak.client-secret=Eq89CuIbgJow1cMO0vBFYJMcSIBxZMT4
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8180/auth/realms/LearningRealm
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/auth/realm/LearningRealm



#to see the backchannel communication
#logging.level.org.keycloak=DEBUG
#logging.level.org.apache.http=DEBUG



#Client Crdentials: this app calling spring-micro
rest.security.issuer-uri=http://localhost:8180/auth/realms/LearningRealm
security.oauth2.client.client-id=spring-app
security.oauth2.client.client-secret=tFaGavjRrSVlDQLGz5CxaTZ5rsMbPJ6h
security.oauth2.client.user-authorization-uri=${rest.security.issuer-uri}/protocol/openid-connect/auth
security.oauth2.client.access-token-uri=${rest.security.issuer-uri}/protocol/openid-connect/token
security.oauth2.client.scope=openid
security.oauth2.client.grant-type=client_credentials


#bug in Spring Boot 2.6 + Keycoak https://stackoverflow.com/questions/70207564/spring-boot-2-6-regression-how-can-i-fix-keycloak-circular-dependency-in-adapte
spring.main.allow-circular-references=true
